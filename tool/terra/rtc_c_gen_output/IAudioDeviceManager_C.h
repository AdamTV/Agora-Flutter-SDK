
    #ifndef IAUDIODEVICEMANAGER_C_H_
    #define IAUDIODEVICEMANAGER_C_H_
    
    #include <stdint.h>
    #include <stddef.h>
    
    
    
    
typedef enum agora_rtc__MAX_DEVICE_ID_LENGTH_TYPE__C
{
  MAX_DEVICE_ID_LENGTH= 512,
} agora_rtc__MAX_DEVICE_ID_LENGTH_TYPE__C;

typedef void* agora_rtc__IAudioDeviceCollection__Handle;

int agora_rtc__IAudioDeviceCollection__getCount(agora_rtc__IAudioDeviceCollection__Handle handle);
int agora_rtc__IAudioDeviceCollection__getDevice(agora_rtc__IAudioDeviceCollection__Handle handle,int index,char deviceName[512],char deviceId[512]);
int agora_rtc__IAudioDeviceCollection__setDevice(agora_rtc__IAudioDeviceCollection__Handle handle,const char deviceId[512]);
int agora_rtc__IAudioDeviceCollection__getDefaultDevice(agora_rtc__IAudioDeviceCollection__Handle handle,char deviceName[512],char deviceId[512]);
int agora_rtc__IAudioDeviceCollection__setApplicationVolume(agora_rtc__IAudioDeviceCollection__Handle handle,int volume);
int agora_rtc__IAudioDeviceCollection__getApplicationVolume(agora_rtc__IAudioDeviceCollection__Handle handle,int& volume);
int agora_rtc__IAudioDeviceCollection__setApplicationMute(agora_rtc__IAudioDeviceCollection__Handle handle,bool mute);
int agora_rtc__IAudioDeviceCollection__isApplicationMute(agora_rtc__IAudioDeviceCollection__Handle handle,bool& mute);
void agora_rtc__IAudioDeviceCollection__release(agora_rtc__IAudioDeviceCollection__Handle handle);
typedef void* agora_rtc__IAudioDeviceManager__Handle;

agora_rtc__IAudioDeviceCollection__Handle* agora_rtc__IAudioDeviceManager__enumeratePlaybackDevices(agora_rtc__IAudioDeviceManager__Handle handle);
agora_rtc__IAudioDeviceCollection__Handle* agora_rtc__IAudioDeviceManager__enumerateRecordingDevices(agora_rtc__IAudioDeviceManager__Handle handle);
int agora_rtc__IAudioDeviceManager__setPlaybackDevice(agora_rtc__IAudioDeviceManager__Handle handle,const char deviceId[512]);
int agora_rtc__IAudioDeviceManager__getPlaybackDevice(agora_rtc__IAudioDeviceManager__Handle handle,char deviceId[512]);
int agora_rtc__IAudioDeviceManager__getPlaybackDeviceInfo(agora_rtc__IAudioDeviceManager__Handle handle,char deviceId[512],char deviceName[512]);
int agora_rtc__IAudioDeviceManager__setPlaybackDeviceVolume(agora_rtc__IAudioDeviceManager__Handle handle,int volume);
int agora_rtc__IAudioDeviceManager__getPlaybackDeviceVolume(agora_rtc__IAudioDeviceManager__Handle handle,int* volume);
int agora_rtc__IAudioDeviceManager__setRecordingDevice(agora_rtc__IAudioDeviceManager__Handle handle,const char deviceId[512]);
int agora_rtc__IAudioDeviceManager__getRecordingDevice(agora_rtc__IAudioDeviceManager__Handle handle,char deviceId[512]);
int agora_rtc__IAudioDeviceManager__getRecordingDeviceInfo(agora_rtc__IAudioDeviceManager__Handle handle,char deviceId[512],char deviceName[512]);
int agora_rtc__IAudioDeviceManager__setRecordingDeviceVolume(agora_rtc__IAudioDeviceManager__Handle handle,int volume);
int agora_rtc__IAudioDeviceManager__getRecordingDeviceVolume(agora_rtc__IAudioDeviceManager__Handle handle,int* volume);
int agora_rtc__IAudioDeviceManager__setLoopbackDevice(agora_rtc__IAudioDeviceManager__Handle handle,const char deviceId[512]);
int agora_rtc__IAudioDeviceManager__getLoopbackDevice(agora_rtc__IAudioDeviceManager__Handle handle,char deviceId[512]);
int agora_rtc__IAudioDeviceManager__setPlaybackDeviceMute(agora_rtc__IAudioDeviceManager__Handle handle,bool mute);
int agora_rtc__IAudioDeviceManager__getPlaybackDeviceMute(agora_rtc__IAudioDeviceManager__Handle handle,bool* mute);
int agora_rtc__IAudioDeviceManager__setRecordingDeviceMute(agora_rtc__IAudioDeviceManager__Handle handle,bool mute);
int agora_rtc__IAudioDeviceManager__getRecordingDeviceMute(agora_rtc__IAudioDeviceManager__Handle handle,bool* mute);
int agora_rtc__IAudioDeviceManager__startPlaybackDeviceTest(agora_rtc__IAudioDeviceManager__Handle handle,const char* testAudioFilePath);
int agora_rtc__IAudioDeviceManager__stopPlaybackDeviceTest(agora_rtc__IAudioDeviceManager__Handle handle);
int agora_rtc__IAudioDeviceManager__startRecordingDeviceTest(agora_rtc__IAudioDeviceManager__Handle handle,int indicationInterval);
int agora_rtc__IAudioDeviceManager__stopRecordingDeviceTest(agora_rtc__IAudioDeviceManager__Handle handle);
int agora_rtc__IAudioDeviceManager__startAudioDeviceLoopbackTest(agora_rtc__IAudioDeviceManager__Handle handle,int indicationInterval);
int agora_rtc__IAudioDeviceManager__stopAudioDeviceLoopbackTest(agora_rtc__IAudioDeviceManager__Handle handle);
int agora_rtc__IAudioDeviceManager__followSystemPlaybackDevice(agora_rtc__IAudioDeviceManager__Handle handle,bool enable);
int agora_rtc__IAudioDeviceManager__followSystemRecordingDevice(agora_rtc__IAudioDeviceManager__Handle handle,bool enable);
int agora_rtc__IAudioDeviceManager__followSystemLoopbackDevice(agora_rtc__IAudioDeviceManager__Handle handle,bool enable);
void agora_rtc__IAudioDeviceManager__release(agora_rtc__IAudioDeviceManager__Handle handle);
    
    #endif// IAUDIODEVICEMANAGER_C_H_
    